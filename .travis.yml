sudo: false
language: generic

apt:
  - alex-3.1.4

# Speed builds up by caching install requirements
cache:
  directories:
  - $HOME/.ghc
  - $HOME/.cabal
  - $HOME/usr

matrix:
  allow_failures:
    # Coverage is currently broken, so allow failure
    - env: GHCVER=8.0.2 CABALVER=1.24 COVERAGE=true
  include:
    - env: GHCVER=7.8.4 CABALVER=1.20 LUAVER=default
      compiler: ": #GHC 7.8.4"
      addons: {apt: {packages: [cabal-install-1.20,ghc-7.8.4], sources: [hvr-ghc]}}
    - env: GHCVER=7.8.4 CABALVER=1.20 LUAVER=lua-5.1
      compiler: ": #GHC 7.8.4"
      addons: {apt: {packages: [cabal-install-1.20,ghc-7.8.4], sources: [hvr-ghc]}}
    - env: GHCVER=7.8.4 CABALVER=1.20 LUAVER=luajit
      compiler: ": #GHC 7.8.4"
      addons: {apt: {packages: [cabal-install-1.20,ghc-7.8.4], sources: [hvr-ghc]}}

    - env: GHCVER=8.0.2 CABALVER=1.24 LUAVER=default
      compiler: ": #GHC 8.0.2"
      addons: {apt: {packages: [cabal-install-1.24,ghc-8.0.2], sources: [hvr-ghc]}}

    - env: GHCVER=8.0.2 CABALVER=1.24 COVERAGE=true
      compiler: ": #GHC 8.0.2"
      addons: {apt: {packages: [cabal-install-1.20,ghc-8.0.2], sources: [hvr-ghc]}}

  # mark build as successful as soon as all required successes are in.
  fast_finish: true

before_install:
  - export PATH=/opt/alex/3.1.4/bin:/opt/ghc/$GHCVER/bin:/opt/cabal/$CABALVER/bin:$PATH
  - cabal update

install:
  - cabal install --only-dependencies --enable-tests

script:
  - export CABAL_CONFIG_ARGS="--enable-tests"
  - if [ -n "${COVERAGE}" ]; then CABAL_CONFIG_ARGS="--enable-library-coverage"; fi
  - |
    case "$LUAVER" in
      (lua-5.1):
          # Install Lua 5.1.5
          if ! ([ -e "${HOME}/usr/bin/lua" ] &&
                ${HOME}/usr/bin/lua -v 2>&1 | grep -q "Lua 5.1.5")  ; then
              wget http://www.lua.org/ftp/lua-5.1.5.tar.gz
              tar -xf lua-5.1.5.tar.gz
              cd lua-5.1.5
              sed -i 's/^CFLAGS= -O2 -Wall/CFLAGS= -O2 -Wall -fPIC/' src/Makefile
              make linux
              make install INSTALL_TOP=${HOME}/usr
              cd ..
          fi

          # Compile and link using system-wide Lua 5.1.5
          CABAL_CONFIG_ARGS="$CABAL_CONFIG_ARGS -fsystem-lua"
          CABAL_CONFIG_ARGS="$CABAL_CONFIG_ARGS --extra-include-dirs=${HOME}/usr/include"
          CABAL_CONFIG_ARGS="$CABAL_CONFIG_ARGS --extra-lib-dirs=${HOME}/usr/lib"
          ;;
      (luajit):
          # Install LuaJIT 2.0.3
          wget http://luajit.org/download/LuaJIT-2.0.3.tar.gz
          tar -xf LuaJIT-2.0.3.tar.gz
          cd LuaJIT-2.0.3
          sed -i 's/^TARGET_CC= $(STATIC_CC)/TARGET_CC= $(DYNAMIC_CC)/g' src/Makefile
          make
          make install PREFIX=${HOME}/usr
          cd ..

          # Compile and link using system-wide LuaJIT
          CABAL_CONFIG_ARGS="$CABAL_CONFIG_ARGS -fsystem-lua -fluajit"
          CABAL_CONFIG_ARGS="$CABAL_CONFIG_ARGS --extra-include-dirs=${HOME}/usr/include/luajit-2.0"
          CABAL_CONFIG_ARGS="$CABAL_CONFIG_ARGS --extra-lib-dirs=${HOME}/usr/lib"
          ;;
    esac
  - export LD_LIBRARY_PATH=${HOME}/usr/lib:$LD_LIBRARY_PATH
  - echo $CABAL_CONFIG_ARGS
  - cabal configure $CABAL_CONFIG_ARGS
  - cabal build
  - cabal test
  - cabal copy
  - cabal sdist

after_success:
  - set -e
  - set -x
  - if [ -n "${COVERAGE}" ]; then
      cabal sandbox init;
      cabal install hpc-coveralls;
      ./.cabal-sandbox/bin/hpc-coveralls simple-test callbacks haskellfun err_prop test;
    fi
